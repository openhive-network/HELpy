stages:
  - static_code_analysis
  - build
  - tests
  - deploy

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  PACKAGES_TO_CHECK: "helpy/ tests/"
  # colors:
  TXT_BLUE: "\e[1;34m"
  TXT_CLEAR: "\e[0m"

  DATA_CACHE_HIVE_PREFIX: "/cache/replay_data_hive"
  BLOCK_LOG_SOURCE_DIR_5M: /blockchain/block_log_5m
  BLOCK_LOG_SOURCE_DIR_MIRRORNET_5M: /blockchain/block_log_5m_mirrornet

  # uses registry.gitlab.syncad.com/hive/hive/ci-base-image:ubuntu22.04-10
  CI_BASE_IMAGE_TAG: "@sha256:080b16fd53013aeb9b89b00a8dfc90fecf886173f46448b05f45cee376c43330"
  CI_BASE_IMAGE: "registry.gitlab.syncad.com/hive/hive/ci-base-image${CI_BASE_IMAGE_TAG}"

include:
  - project: 'hive/hive'
    # This has to be the same as the commit checked out in the submodule
    ref: 2c5e0bca0a2725bc5e4fbf4280e0a3c862d21bb6
    file: '/scripts/ci-helpers/prepare_data_image_job.yml'
  - project: 'hive/common-ci-configuration'
    # This should be the same version of Common CI defined in /hive/scripts/ci-helpers/prepare_data_image_job.yml
    ref: 7ea99b10bbf0f9b1fbb88f52a78ead4c82f15d75
    file: '/templates/python_projects.gitlab-ci.yml'

image: ${CI_BASE_IMAGE}

default:
  tags:
    - public-runner-docker

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| STATIC CODE ANALYSIS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

pre_commit_checks:
  stage: static_code_analysis
  extends: .pre_commit_checks_template

lint_code_with_ruff:
  stage: static_code_analysis
  extends: .lint_code_with_ruff_template

formatting_with_black_check:
  stage: static_code_analysis
  extends: .formatting_with_black_check_template

type_check_with_mypy:
  stage: static_code_analysis
  extends: .type_check_with_mypy_template

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| STATIC CODE ANALYSIS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| BUILD |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

prepare_hived_image:
  extends: .prepare_hived_image
  needs: []
  stage: build
  variables:
    SUBMODULE_DIR: "$CI_PROJECT_DIR/hive"
    REGISTRY_USER: "$HIVED_CI_IMGBUILDER_USER"
    REGISTRY_PASS: $HIVED_CI_IMGBUILDER_PASSWORD
    BINARY_CACHE_PATH: "$CI_PROJECT_DIR/hived-binaries"
    HIVE_NETWORK_TYPE: mainnet
  tags:
    - public-runner-docker
    - hived-for-tests

prepare_hived_data:
  extends: .prepare_hived_data_5m
  needs:
    - job: prepare_hived_image
      artifacts: true
  stage: build
  variables:
    SUBMODULE_DIR: "$CI_PROJECT_DIR/hive"
    BLOCK_LOG_SOURCE_DIR: $BLOCK_LOG_SOURCE_DIR_5M
    CONFIG_INI_SOURCE: "$CI_PROJECT_DIR/hive/docker/config_5M.ini"
  tags:
    - data-cache-storage


build_wheel:
  stage: build
  extends: .build_wheel_template

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| BUILD |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| TESTS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

run_tests:
  stage: tests
  extends: .project_develop_configuration_template
  needs:
    - job: prepare_hived_data
      artifacts: true
  services:
    - name: $HIVED_IMAGE_NAME
      alias: hived-instance
      variables:
        DATA_SOURCE: "${DATA_CACHE_HIVE_PREFIX}_${HIVED_COMMIT}"
        LOG_FILE: $CI_JOB_NAME.log
      command: ["--replay-blockchain", "--stop-replay-at-block=5000000"]
  variables:
    HIVED_COMMIT: $HIVED_COMMIT
    HIVED_UID: $HIVED_UID
    PATH_TO_REPORT: "$CI_PROJECT_DIR/report.xml"
  script:
    - echo -e "${TXT_BLUE}Launching tests...${TXT_CLEAR}"
    - python3 -m pytest --durations 0 --junitxml=report.xml --hived-http-endpoint="http://hived-instance:8091" tests/
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      junit: $PATH_TO_REPORT
  tags:
    - data-cache-storage

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| TESTS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| DEPLOY |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

.deploy_wheel_needs: &deploy_wheel_needs
  needs:
    - job: pre_commit_checks
    # - job: run_tests
    - job: build_wheel
      artifacts: true

deploy_wheel_to_gitlab:
  stage: deploy
  extends: .deploy_wheel_to_gitlab_template
  <<: *deploy_wheel_needs
  when: on_success

deploy_wheel_to_pypi:
  extends: .deploy_wheel_to_pypi_template
  stage: deploy
  <<: *deploy_wheel_needs

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| DEPLOY |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
