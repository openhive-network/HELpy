stages:
  - static_code_analysis
  - build
  - tests
  - beekeepy



workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

variables:
  GIT_STRATEGY: clone
  GIT_DEPTH: 1
  GIT_SUBMODULE_STRATEGY: none
  GIT_SUBMODULE_DEPTH: 1

  PACKAGES_TO_CHECK: "tests/ beekeepy/"
  # colors:
  TXT_BLUE: "\e[1;34m"
  TXT_CLEAR: "\e[0m"

  DATA_CACHE_HIVE_PREFIX: "/cache/replay_data_hive"
  BLOCK_LOG_SOURCE_DIR_5M: /blockchain/block_log_5m
  BLOCK_LOG_SOURCE_DIR_MIRRORNET_5M: /blockchain/block_log_5m_mirrornet

  BEEKEEPY_DIR: ${CI_PROJECT_DIR}/beekeepy
  LOCAL_TOOLS_DIR: ${CI_PROJECT_DIR}/tests/local-tools

include:
  - project: 'hive/hive'
    # This has to be the same as the commit checked out in the submodule
    ref: 2f66491fa87527714829792959fce84cd94ecde3
    file: '/scripts/ci-helpers/prepare_data_image_job.yml'
  # DO NOT include ccc here. It will be indirectly included by above yaml file.
  #- project: 'hive/common-ci-configuration'

image: ${PYTHON_IMAGE}

default:
  tags:
    - public-runner-docker

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| STATIC CODE ANALYSIS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

.static_code_analysis_vars: &static_code_analysis_vars
  variables:
    PYPROJECT_DIR: "${LOCAL_TOOLS_DIR}"
    PYPROJECT_CONFIG_PATH: "${CI_PROJECT_DIR}/tests/local-tools/pyproject.toml"

pre_commit_checks:
  stage: static_code_analysis
  extends: .pre_commit_checks_template
  variables:
    PYPROJECT_DIR: "${LOCAL_TOOLS_DIR}"
    PRE_COMMIT_CONFIG: "${CI_PROJECT_DIR}/.pre-commit-config.yaml"

formatting_with_ruff_check:
  stage: static_code_analysis
  extends: .project_develop_configuration_template
  <<: *static_code_analysis_vars
  script:
    - echo -e "${TXT_BLUE}Checking code formatting with Ruff...${TXT_CLEAR}" &&
      ruff format --config "${PYPROJECT_CONFIG_PATH}" --check --diff ${PACKAGES_TO_CHECK}

lint_code_with_ruff:
  stage: static_code_analysis
  extends: .lint_code_with_ruff_template
  <<: *static_code_analysis_vars

type_check_with_mypy:
  stage: static_code_analysis
  extends: .type_check_with_mypy_template
  <<: *static_code_analysis_vars

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| STATIC CODE ANALYSIS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| BUILD |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

prepare_hived_image:
  extends: .prepare_hived_image
  needs: []
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    SUBMODULE_DIR: "$CI_PROJECT_DIR/hive"
    REGISTRY_USER: "$HIVED_CI_IMGBUILDER_USER"
    REGISTRY_PASS: $HIVED_CI_IMGBUILDER_PASSWORD
    BINARY_CACHE_PATH: "$CI_PROJECT_DIR/hived-binaries"
    HIVE_NETWORK_TYPE: mainnet
  tags:
    - public-runner-docker
    - hived-for-tests

prepare_hived_data:
  extends: .prepare_hived_data_5m
  needs:
    - job: prepare_hived_image
      artifacts: true
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    SUBMODULE_DIR: "$CI_PROJECT_DIR/hive"
    BLOCK_LOG_SOURCE_DIR: $BLOCK_LOG_SOURCE_DIR_5M
    CONFIG_INI_SOURCE: "$CI_PROJECT_DIR/hive/docker/config_5M.ini"
  tags:
    - data-cache-storage

build_beekeepy_wheel:
  stage: beekeepy
  extends: .build_wheel_template
  needs:
    - job: pre_commit_checks
    - job: run_beekeepy_tests
    - job: prepare_hived_image
      artifacts: true
  variables:
    PYPROJECT_DIR: "$BEEKEEPY_DIR"
  before_script:
    - cp $CI_PROJECT_DIR/hived-binaries/beekeeper $BEEKEEPY_DIR/beekeepy/beekeeper
  tags:
    - public-runner-docker

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| TESTS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

.run_tests_template:
  extends: .project_develop_configuration_template
  needs:
    - job: prepare_hived_image
      artifacts: true
  variables:
    HIVED_COMMIT: $HIVED_COMMIT
    HIVED_UID: $HIVED_UID
    PATH_TO_REPORT: "$CI_PROJECT_DIR/report.xml"
    PYPROJECT_DIR: "$LOCAL_TOOLS_DIR"
    SUBPROJECT_TEST_TARGET: ""
    HIVED_HTTP_ENDPOINT: ""
  before_script:
    - cp $CI_PROJECT_DIR/hived-binaries/beekeeper $BEEKEEPY_DIR/beekeepy/beekeeper
    - !reference [.project_develop_configuration_template, before_script]
  script:
    - if [ -z "${HIVED_HTTP_ENDPOINT}" ]; then HIVED_HTTP_ENDPOINT=""; else HIVED_HTTP_ENDPOINT="--hived-http-endpoint=${HIVED_HTTP_ENDPOINT}"; fi
    - echo -e "${TXT_BLUE}Launching tests...${TXT_CLEAR}"
    - python3 -m pytest --asyncio-mode auto -n auto --durations 0 --junitxml=report.xml ${HIVED_HTTP_ENDPOINT} "tests/${SUBPROJECT_TEST_TARGET}_test"
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      junit: $PATH_TO_REPORT
  tags:
    - data-cache-storage

run_beekeepy_tests:
  stage: beekeepy
  extends: .run_tests_template
  variables:
    SUBPROJECT_TEST_TARGET: "beekeepy"

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| DEPLOY |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

.deploy_wheel_needs:
  needs:
    - job: pre_commit_checks
      artifacts: true

deploy_beekeepy_wheel_to_gitlab:
  stage: beekeepy
  extends: .deploy_wheel_to_gitlab_template
  needs:
    - job: build_beekeepy_wheel
      artifacts: true
  variables:
    PYPROJECT_DIR: "${BEEKEEPY_DIR}"
  when: on_success

deploy_beekeepy_wheel_to_pypi:
  stage: beekeepy
  extends: .deploy_wheel_to_pypi_template
  needs:
    - job: build_beekeepy_wheel
      artifacts: true
  variables:
    PYPROJECT_DIR: "${BEEKEEPY_DIR}"
  when: on_success
