stages:
  - static_code_analysis
  - tests

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  PACKAGES_TO_CHECK: "helpy/ tests/"
  # colors:
  TXT_BLUE: "\e[1;34m"
  TXT_CLEAR: "\e[0m"

  # uses registry.gitlab.syncad.com/hive/hive/ci-base-image:ubuntu22.04-10
  CI_BASE_IMAGE_TAG: "@sha256:080b16fd53013aeb9b89b00a8dfc90fecf886173f46448b05f45cee376c43330"
  CI_BASE_IMAGE: "registry.gitlab.syncad.com/hive/hive/ci-base-image${CI_BASE_IMAGE_TAG}"

include:
  - project: 'hive/common-ci-configuration'
    ref: 44d0cec8cfa8fb87d0daf5cef1485fb57b9e26fd
    file: '/templates/python_projects.gitlab-ci.yml'

image: ${CI_BASE_IMAGE}

default:
  tags:
    - public-runner-docker

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| STATIC CODE ANALYSIS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

pre_commit_checks:
  stage: static_code_analysis
  extends: .pre_commit_checks_template

lint_code_with_ruff:
  stage: static_code_analysis
  extends: .lint_code_with_ruff_template

formatting_with_black_check:
  stage: static_code_analysis
  extends: .formatting_with_black_check_template

type_check_with_mypy:
  stage: static_code_analysis
  extends: .type_check_with_mypy_template

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| STATIC CODE ANALYSIS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| TESTS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

run_tests:
  stage: tests
  extends: .project_develop_configuration_template
  needs: [ ]  # do not wait for previous stage to finish before starting this one
  variables:
    PATH_TO_REPORT: "$CI_PROJECT_DIR/report.xml"
  script:
    - echo -e "${TXT_BLUE}Launching tests...${TXT_CLEAR}"
    - python3 -m pytest --durations 0 --junitxml=report.xml tests/
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      junit: $PATH_TO_REPORT

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| TESTS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
